name: DotNet

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  POWERSHELL_TELEMETRY_OPTOUT: 1
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        cache: [true, false]
        include:
          - os: windows-2019
            cache: false
            DOTNET_INSTALL_DIR: D:\dotnet
          - os: windows-2022
            cache: false
            DOTNET_INSTALL_DIR: D:\dotnet
          - os: windows-2019
            cache: true
            DOTNET_INSTALL_DIR: D:\dotnet
          - os: windows-2022
            cache: true
            DOTNET_INSTALL_DIR: D:\dotnet
          - os: windows-2019
            cache: false
            DOTNET_INSTALL_DIR: ''
          - os: windows-2022
            cache: false
            DOTNET_INSTALL_DIR: ''
          - os: windows-2019
            cache: true
            DOTNET_INSTALL_DIR: ''
          - os: windows-2022
            cache: true
            DOTNET_INSTALL_DIR: ''
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Windows Environment Variables
        if: ${{ startsWith(matrix.os, 'windows') && matrix.DOTNET_INSTALL_DIR != '' }}
        shell: pwsh
        run: |
          echo "DOTNET_INSTALL_DIR=${{ matrix.DOTNET_INSTALL_DIR }}" >> $ENV:GITHUB_ENV
          echo "NUGET_PACKAGES=D:\nuget\packages" >> $ENV:GITHUB_ENV

      - name: Print matrix values
        run: |
          echo "OS: ${{ matrix.os }}"
          echo "Cache: ${{ matrix.cache }}"
          echo "DOTNET_INSTALL_DIR: ${{ matrix.DOTNET_INSTALL_DIR }}"
          echo "NUGET_PACKAGES: ${{ env.NUGET_PACKAGES }}"

      - name: Cache NuGet packages
        if: matrix.cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Setup DotNet 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          dotnet-quality: 'preview'

      - name: DotNet restore
        run: |
          dotnet new nugetconfig
          dotnet restore -v n
